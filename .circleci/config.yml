version: 2.1
orbs:
  node: circleci/node@4.7.0

executors:
  app-executor:
    docker:
      - image: cimg/node:14.18.1
    resource_class: large

commands:
  configure-executor:
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - checkout
  yarn-install:
    description: "Yarn install with cache optimization"
    steps:
      - node/install-packages:
          pkg-manager: yarn
  workspace-restore:
    description: "Restore workspace"
    steps:
      - attach_workspace:
          at: .
  cmflow-install:
    description: "Install CmFlow for the job"
    steps:
      - run:
          name: Install cmflow
          command: yarn add -W -D https://${GH_TOKEN}@github.com/ClubMediterranee/cmflow#v0.60.14 --frozen-lockfile
      - run:
          name: Reset package.json
          command: git checkout -- package.json

jobs:
  install:
    executor: app-executor
    steps:
      - configure-executor
      - yarn-install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - packages/*/node_modules
  lint:
    executor: app-executor
    steps:
      - configure-executor
      - workspace-restore
      - run:
          name: Lint
          command: yarn lint:ci
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports
  test:
    executor: app-executor
    steps:
      - configure-executor
      - workspace-restore
      - run:
          name: Unit test
          command: yarn test:ci
      - store_test_results:
          path: reports
      - store_artifacts:
          path: ./reports
  deploy:
    executor: app-executor
    environment:
      BASE_URL: "https://clubmediterranee.github.io/swagger/latest"
      GITHUB_PAGES_PATH: "./dist"
    steps:
      - configure-executor
      - workspace-restore
      - cmflow-install
      - run: yarn release

workflows:
  build:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - deploy:
          requires:
            - lint
            - test
          filters:
            branches:
              only: /^master$/
          context: api
